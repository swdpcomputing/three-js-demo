{
  "name": "next-ts-fe",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "export": "next export",
    "upload-domain-bucket": "aws s3 sync ./out/ s3://threejstexturedemo.co.uk/",
    "upload-subdomain-bucket": "aws s3 sync ./out/ s3://www.threejstexturedemo.co.uk/",
    "deploy": "next build && next export && npm run upload-domain-bucket && npm run upload-subdomain-bucket",
    "tslint": "tslint -c tslint.json 'src/**/*.{ts,tsx}",
    "d:build": "dotenv -- cross-var docker build -t %IMAGE_NAME% .",
    "d:run": "dotenv -- cross-var docker run -d -p %PUBLISHED_PORT%:%INTERNAL_PORT% --name %CONTAINER_NAME% %IMAGE_NAME%",
    "d:runrefresh": "dotenv -- cross-var docker run -d -p %PUBLISHED_PORT%:%INTERNAL_PORT% -v $(pwd):/app --name %CONTAINER_NAME% %IMAGE_NAME%",
    "d:exec": "dotenv -- cross-var docker exec -it %CONTAINER_NAME% sh",
    "d:start": "dotenv -- cross-var docker container start %CONTAINER_NAME%",
    "d:stop": "dotenv -- cross-var docker container stop %CONTAINER_NAME%",
    "d:dc": "dotenv -- cross-var docker rm %CONTAINER_NAME%",
    "d:di": "dotenv -- cross-var docker image rm %IMAGE_NAME%",
    "d:stop-dc": "npm run d:stop && dotenv -- cross-var docker rm %CONTAINER_NAME%",
    "d:copyfrom": "dotenv -- cross-var docker cp %CONTAINER_NAME%:%TO_COPY% %COPY_TO%",
    "d:copyto": "dotenv -- cross-var docker cp %TO_COPY% %CONTAINER_NAME%:%COPY_TO%",
    "dc:up": "docker-compose up",
    "dc:down": "docker-compose down",
    "dc:build": "docker-compose build",
    "dc:buildfresh": "docker-compose build --no-cache",
    "dc:build-run": "docker-compose up --build",
    "dc:buildfresh-run": "docker-compose up --build --no-cache",
    "d:reset": "npm run dc:down && npm run d:sac && npm run d:dac",
    "d:sac": "docker ps -q | xargs docker stop",
    "d:dac": "docker ps -q | xargs docker rm",
    "d:ddc": "docker container prune -f",
    "d:ddi": "docker image prune -f",
    "d:dai": "docker ps -aq | xargs docker rm && docker image prune -fa",
    "d:nuke": "docker system prune --all --force --volumes"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.204.0",
    "@babel/runtime": "^7.14.6",
    "@emotion/react": "^11.10.4",
    "@emotion/styled": "^11.10.4",
    "axios": "^0.27.2",
    "cors": "^2.8.5",
    "cross-var": "^1.1.0",
    "d3": "^7.8.2",
    "dotenv": "^16.0.3",
    "dotenv-cli": "^6.0.0",
    "gsap": "^3.11.3",
    "lil-gui": "^0.17.0",
    "next": "12.2.5",
    "randomcolor": "^0.6.2",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "three": "^0.145.0"
  },
  "devDependencies": {
    "@types/d3": "^7.4.0",
    "@types/node": "^18.7.13",
    "@types/react": "^18.0.17",
    "@types/react-dom": "18.0.5",
    "@types/three": "^0.144.0",
    "autoprefixer": "^10.4.8",
    "eslint": "8.22.0",
    "eslint-config-next": "12.2.5",
    "postcss-import": "^15.0.0",
    "ts-loader": "^9.4.1",
    "typescript": "^4.8.4"
  },
  "browser": {
    "fs": false
  }
}
